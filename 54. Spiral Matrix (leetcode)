class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int m = matrix.size();
        int n = matrix[0].size();
        int top = 0;
        int start = 0;
        int bottom = m - 1;
        int end = n - 1;

        while (top <= bottom && start <= end) {

            // traversing first row
            for (int i = start; i <= end; i++) {
                ans.push_back(matrix[top][i]);
            }
            top++;

            // traversing last column
            for (int i = top; i <= bottom; i++) {
                ans.push_back(matrix[i][end]);
            }
            end--;

            // traversing last row

            if (top <= bottom) {

                for (int i = end; i >= start; i--) {
                    ans.push_back(matrix[bottom][i]);
                }
                bottom--;
            }

            // traversing first column

            if (start <= end) {

                for (int i = bottom; i >= top; i--) {
                    ans.push_back(matrix[i][start]);
                }
                start++;
            }
        }

        return ans;
    }
};
