class Solution {
public:
    vector<int> findDiagonalOrder(vector<vector<int>>& mat) {
        vector<int> ans;
        int rowSize = mat.size();
        int colSize = mat[0].size();

        int countDiagonal = rowSize + colSize - 1;

        for (int diagonal = 1; diagonal <= countDiagonal; diagonal++) {

            if (diagonal & 1) {
                // for odd diagonal
                int row = min(diagonal - 1, rowSize - 1);
                int col = (diagonal - 1) - row;

                while (row >= 0 && col < colSize) {
                    ans.push_back(mat[row][col]);
                    row--;
                    col++;
                }

            } else {
                //  for even diagonal 
                int col = min(diagonal - 1, colSize - 1);
                int row = (diagonal - 1) - col;

                while (row < rowSize && col >= 0) {
                    ans.push_back(mat[row][col]);
                    row++;
                    col--;
                }
            }
        }

        return ans;
    }
};
